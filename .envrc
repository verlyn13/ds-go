#!/usr/bin/env bash
# direnv configuration for ds-go project
# Automatically loads project-specific environment when entering directory

# Load mise environment using the standard direnv integration
if command -v mise >/dev/null 2>&1; then
  watch_file .mise.toml
  if [ -f .mise.toml ]; then
    eval "$(mise hook-env -s bash)"
  fi
fi

# Project-specific environment variables
export GOMOD="github.com/verlyn13/ds-go"
export CGO_ENABLED=0

# Development settings
export DS_DEV_MODE=true
export DS_CONFIG_PATH="${HOME}/.config/ds/config.yaml"

# Build settings
export LDFLAGS="-s -w"
export VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "dev")

# Add project bin to PATH for built binaries
PATH_add ./

# Go-specific settings
export GOPATH="${HOME}/.local/share/go/workspace"
export GOBIN="${GOPATH}/bin"
PATH_add "${GOBIN}"

# Ensure Go module mode
export GO111MODULE=on

# Custom project commands
alias ds-dev="go run ./cmd/ds"
alias ds-test="mise run test"
alias ds-lint="mise run lint"
alias ds-build="mise run build"
alias ds-ci="mise run ci"

# Project status on directory entry (quiet if commands unavailable)
if command -v direnv >/dev/null 2>&1; then
  if command -v go >/dev/null 2>&1; then
    GOVERS=$(go version 2>/dev/null | awk '{print $3}')
  else
    GOVERS="not-installed"
  fi
  echo "ðŸ“¦ ds-go environment loaded â€” Go: ${GOVERS}, Project: ${GOMOD}"
  echo "   Config: ${DS_CONFIG_PATH} Â· try 'mise tasks'"
fi
